#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT(fence-virt, 0.1, lon@users.sourceforge.net)
AC_CONFIG_SRCDIR([server/main.c])
AC_CONFIG_HEADER([include/config.h])

AC_CANONICAL_SYSTEM

# Checks for programs.
AC_PROG_YACC
AC_PROG_CC
AC_PROG_CXX
AC_PROG_LEX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

# Checks for libraries.
AC_CHECK_LIB([SaCkpt], [saCkptCheckpointOpen])
AC_CHECK_LIB([cpg], [cpg_finalize])
AC_CHECK_LIB([nss3], [NSS_NoDB_Init])
AC_CHECK_LIB([pthread], [pthread_create])
AC_CHECK_LIB([qpidclient], [pthread_create])
AC_CHECK_LIB([virt], [virConnectOpen])
AC_CHECK_LIB([xml2], [main])


# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([arpa/inet.h fcntl.h malloc.h netdb.h netinet/in.h stdint.h stdlib.h string.h sys/ioctl.h sys/socket.h sys/time.h syslog.h termios.h unistd.h openais/cpg.h corosync/cpg.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_CHECK_FUNCS([gettimeofday memmove memset select socket strcasecmp strchr strdup strerror])



#
# Modular build for fence_virtd to split up dependencies
# (default)
#
AC_ARG_ENABLE(modules,
[AS_HELP_STRING([--disable-modules],
		[Disable modular build])],
[ modules=$enableval ], [ modules=yes ])
AC_SUBST(modules)

### The following options only are used when $modules="yes" ###

# Null plugin: Disabled by default
AC_ARG_ENABLE(null-plugin,
[AS_HELP_STRING([--enable-null-plugin],
		[Enable null (no-op) backend plugin])],
[ mod_null=$enableval ], [ mod_null=no ])
AC_SUBST(mod_null)

# libvirt plugin: Enabled by default
AC_ARG_ENABLE(libvirt-plugin,
[AS_HELP_STRING([--disable-libvirt-plugin],
		[Disable local-mode libvirt backend plugin])],
[ mod_libvirt=$enableval ], [ mod_libvirt=yes ])
AC_SUBST(mod_libvirt)

# checkpoint plugin: Enabled by default
AC_ARG_ENABLE(checkpoint-plugin,
[AS_HELP_STRING([--disable-checkpoint-plugin],
		[Disable cluster checkpoint backend plugin])],
[ mod_checkpoint=$enableval ], [ mod_checkpoint=yes ])
AC_SUBST(mod_checkpoint)

# libvirt-qpid plugin: Enabled by default
AC_ARG_ENABLE(libvirt-qpid-plugin,
[AS_HELP_STRING([--disable-libvirt-qpid-plugin],
		[Disable libvirt-qpid backend plugin])],
[ mod_libvirt_qpid=$enableval ], [ mod_libvirt_qpid=yes ])
AC_SUBST(mod_libvirt_qpid)

# multicast plugin: Enabled by default
AC_ARG_ENABLE(multicast-plugin,
[AS_HELP_STRING([--disable-multicast-plugin],
		[Disable multicast listener plugin])],
[ mod_multicast=$enableval ], [ mod_multicast=yes ])
AC_SUBST(mod_multicast)

# serial/libvirt plugin: Disabled by default
AC_ARG_ENABLE(serial-plugin,
[AS_HELP_STRING([--disable-serial-plugin],
		[Disable serial listener plugin])],
[ mod_serial=$enableval ], [ mod_serial=yes ])
AC_SUBST(mod_serial)

#
# Compatibility symlink: disabled by default
#
AC_ARG_ENABLE(xvm-compat,
[AS_HELP_STRING([--disable-xvm-compat],
		[Disable fence_xvm symlink compatibility])],
[ xvm_compat=$enableval ], [ xvm_compat=yes ])
AC_SUBST(xvm_compat)


AC_CONFIG_FILES([Makefile.top
		 Makefile
		 fence_virtd.init
                 man/Makefile
                 client/Makefile
                 common/Makefile
                 config/Makefile
                 server/Makefile])
AC_OUTPUT
